{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-training-gaherrer"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_COPIA_archivo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_Excelprueba",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_PruebaClase2",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Excelprueba')]",
				"[concat(variables('factoryId'), '/datasets/CSV_PruebaClase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ConsumirRestComoDataSet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Rest_DataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "JsonResultadoRest",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Clase Asincronica"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Rest_DataSet')]",
				"[concat(variables('factoryId'), '/datasets/JsonResultadoRest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ConsumirRestComoDataSet_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['$id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['currentDateTime']"
										},
										"sink": {
											"name": "currentDateTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['utcOffset']"
										},
										"sink": {
											"name": "utcOffset",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['isDayLightSavingsTime']"
										},
										"sink": {
											"name": "isDayLightSavingsTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dayOfTheWeek']"
										},
										"sink": {
											"name": "dayOfTheWeek",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['timeZoneName']"
										},
										"sink": {
											"name": "timeZoneName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['currentFileTime']"
										},
										"sink": {
											"name": "currentFileTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ordinalDate']"
										},
										"sink": {
											"name": "ordinalDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['serviceResponse']"
										},
										"sink": {
											"name": "serviceResponse",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Rest_DataSet",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_ResultadoRest",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Clase Asincronica"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Rest_DataSet')]",
				"[concat(variables('factoryId'), '/datasets/CSV_ResultadoRest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ConsumoRest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ConsultarHoraUniversal",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://worldclockapi.com/api/json/utc/now",
							"method": "GET"
						}
					},
					{
						"name": "SetDayOfTheWeek",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ConsultarHoraUniversal",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "dayOfTheWeek",
							"value": {
								"value": "@activity('ConsultarHoraUniversal').output.dayOfTheWeek",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"dayOfTheWeek": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CopiaTablaLocalANube')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TBL_IntegratesF",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "TBL_IntgCopiaNube",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Clase3"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TBL_IntegratesF')]",
				"[concat(variables('factoryId'), '/datasets/TBL_IntgCopiaNube')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CopiaTablaLocalANube_Mapeo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT ID AS ID1, NOMBRES AS NOMBRE1, \n  APELLIDOS AS APELLIDO1, EDAD AS EDAD1,\n  ALIAS_FAMILIA AS ALIAS\n  FROM DBO.IntegrantesF",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID1",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "NOMBRE1",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "nombres",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "APELLIDO1",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "apellidos",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "EDAD1",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "edad",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ALIAS",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "alias_familia",
											"type": "String",
											"physicalType": "nchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TBL_IntegratesF",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "TBL_IntgCopiaNube",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Clase3"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TBL_IntegratesF')]",
				"[concat(variables('factoryId'), '/datasets/TBL_IntgCopiaNube')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EjecutarSP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Saludar]",
							"storedProcedureParameters": {
								"nombre": {
									"value": "Abi",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_SqlDatabaseNube",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Clase Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EjecutarSPConResult')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Saludar]",
								"storedProcedureParameters": {
									"nombre": {
										"type": "String",
										"value": "Retoños"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TBL_TableLectura",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CVS_ResultadoSP",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Clase Asincronica"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TBL_TableLectura')]",
				"[concat(variables('factoryId'), '/datasets/CVS_ResultadoSP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FechaPorDefecto')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SetFechaCorteVar",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaCorteVar",
							"value": {
								"value": "@coalesce(pipeline().parameters.FechaCorte, formatDateTime( utcnow() , 'yyyy/MM/dd') )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetFechaCorteOtroFormato",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaCorteOtroFormato",
							"value": {
								"value": "@formatDateTime(variables('FechaCorteVar'),'dd MMMM yyyy')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"FechaCorte": {
						"type": "string"
					}
				},
				"variables": {
					"FechaCorteVar": {
						"type": "String"
					},
					"FechaCorteOtroFormato": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_UsoCondicional')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IfVerificarParImpar",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(mod(pipeline().parameters.Numero,2),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SetResultadoImpar",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Resultado",
										"value": {
											"value": "El Nümero @{pipeline().parameters.Numero} es Impar",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SetResultadoPar",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Resultado",
										"value": {
											"value": "El Número @{pipeline().parameters.Numero} es Par",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Numero": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"variables": {
					"Resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_UsoFormulaManejoFechas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SetFechaActual",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaActual",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetFormatoFecha",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SetFechaActual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaFormatoPerzonalizado",
							"value": {
								"value": "@formatDateTime(variables('FechaActual'),'yyyy/MM/dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetFechaInicioMes",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SetFormatoFecha",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaInicioMes",
							"value": {
								"value": "@startOfMonth(variables('FechaActual'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetFechaSumaPeriodo",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SetFechaInicioMes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaSumaPeriodo",
							"value": {
								"value": "@addToTime(variables('FechaInicioMes'),1,'Month')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetFechaFinMes",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "SetFechaSumaPeriodo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FechaFinMes",
							"value": {
								"value": "@addToTime(variables('FechaSumaPeriodo'),-1,'Day')",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"FechaActual": {
						"type": "String"
					},
					"FechaInicioMes": {
						"type": "String"
					},
					"FechaFormatoPerzonalizado": {
						"type": "String"
					},
					"FechaSumaPeriodo": {
						"type": "String"
					},
					"FechaFinMes": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_UsoFormulaParImpar')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Resultado Par Impar",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "resultado",
							"value": {
								"value": "@if (equals (mod (pipeline().parameters.numero,2), 0),\n            concat (pipeline().parameters.numero, ' Es Par'),\n            concat (pipeline().parameters.numero, ' Es Impar')\n    )",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"numero": {
						"type": "int"
					}
				},
				"variables": {
					"resultado": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_UsoSwitch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.Bandera",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "A",
									"activities": [
										{
											"name": "SetSuma",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Mensaje",
												"value": {
													"value": "@string (add(pipeline().parameters.Numero1, pipeline().parameters.Numero2) )",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "B",
									"activities": [
										{
											"name": "SetMultiplicacion",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Mensaje",
												"value": {
													"value": "@string (mul(pipeline().parameters.Numero1, pipeline().parameters.Numero2) )",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "C",
									"activities": [
										{
											"name": "SetDivision",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Mensaje",
												"value": {
													"value": "@string (div(pipeline().parameters.Numero1, pipeline().parameters.Numero2) )",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "SetDefault",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Mensaje",
										"value": {
											"value": "Valor por defecto",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Bandera": {
						"type": "string",
						"defaultValue": "y"
					},
					"Numero1": {
						"type": "int",
						"defaultValue": 20
					},
					"Numero2": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"Mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_UsoWait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WaitEsperar",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SetInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 25
						}
					},
					{
						"name": "SetInicio",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WaitEsperar",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "mensaje",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"mensaje": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Clase Asincronica"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_copiaIncremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT [idFactura]\n      ,[idCliente]\n      ,[idEmpleado]\n      ,[fechaFactura]\n      ,[subtotal]\n      ,[impuestos]\n  FROM [dbo].[Factura]\n  WHERE YEAR([fechaFactura])=@{pipeline().parameters.año} AND MONTH(fechaFactura)=@{pipeline().parameters.mes}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TBL_TableLectura",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Escribir",
								"type": "DatasetReference",
								"parameters": {
									"Directorio": {
										"value": "Factura/@{pipeline().parameters.año}/@{pipeline().parameters.mes}",
										"type": "Expression"
									},
									"Nombre_Archivo": "Factura01.csv"
								}
							}
						]
					}
				],
				"parameters": {
					"año": {
						"type": "string",
						"defaultValue": "0"
					},
					"mes": {
						"type": "string",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "Clase04"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TBL_TableLectura')]",
				"[concat(variables('factoryId'), '/datasets/CSV_Escribir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_copiainversaalanube')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PruebaClase2",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_copianubelocal",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_PruebaClase2')]",
				"[concat(variables('factoryId'), '/datasets/CSV_copianubelocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_holamundo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "establecer salud",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var1",
							"value": "hola data factory de prueba Giomy"
						}
					}
				],
				"variables": {
					"var1": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_carga_rango_fechas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RangoFechas",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "DECLARE @MinDate DATE = '2009-01-01',         @MaxDate DATE = '2009-05-01';  SELECT CONVERT(varchar,fechaCorte,23) AS fechaCorte, MONTH(fechaCorte) as mesCorte, YEAR(fechaCorte) as anioCorte FROM ( \tSELECT   \tTOP (DATEDIFF(MONTH, @MinDate, @MaxDate) + 1) \tfechaCorte = EOMONTH(DATEADD(MONTH, ROW_NUMBER() OVER(ORDER BY a.object_id) - 1, @MinDate))\n\tFROM    sys.all_objects a \n\tCROSS JOIN sys.all_objects b\n)fechas\nORDER BY fechaCorte;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TBL_TableLectura",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "RangoFechas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('RangoFechas').output.value)",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "PL_copiaIncremental",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_copiaIncremental",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"año": {
												"value": "@item().anioCorte",
												"type": "Expression"
											},
											"mes": {
												"value": "@item().mesCorte",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Clase04"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TBL_TableLectura')]",
				"[concat(variables('factoryId'), '/pipelines/PL_copiaIncremental')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_Escribir')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directorio": {
						"type": "string"
					},
					"Nombre_Archivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Clase4"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Nombre_Archivo",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directorio",
							"type": "Expression"
						},
						"fileSystem": "aci-gaherrer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_PruebaClase2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "pruebacopia.cvs",
						"folderPath": "clase2",
						"fileSystem": "aci-gaherrer"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_ResultadoRest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ConsultaRest.csv",
						"folderPath": "Results",
						"fileSystem": "aci-gaherrer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_copianubelocal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_FileServerClase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "copianubelocal.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_FileServerClase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CVS_ResultadoSP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ResultSaludo.cvs",
						"folderPath": "Results",
						"fileSystem": "aci-gaherrer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonResultadoRest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ConsultaRest",
						"folderPath": "Results",
						"fileSystem": "aci-gaherrer"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_DataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_RestService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ClaseAsicronica"
				},
				"annotations": [],
				"type": "RestResource",
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_RestService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TBL_IntegratesF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SqlServerGH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase3"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "IntegrantesF"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TBL_IntgCopiaNube')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SqlDatabaseNube",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase3"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "TablaGaherrer"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TBL_TableLectura')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SqlDatabaseNube",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Clase4"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Excelprueba')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_FileServerClase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Hoja1",
					"location": {
						"type": "FileServerLocation",
						"fileName": "PruebaDF.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_FileServerClase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_DataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "https://dlsfuturoinfonoprod.dfs.core.windows.net",
					"accountKey": {
						"type": "SecureString",
						"value": "**********"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_FileServerClase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ls_FileServerClase",
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "C:\\DataFactory",
					"userId": "oscar.celin@gmail.com",
					"password": {
						"type": "SecureString",
						"value": "**********"
					}
				},
				"connectVia": {
					"referenceName": "irconexionclaseGH",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_KeyVaultClase3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "https://kv-futuroinfo-noprod.vault.azure.net/"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_RestService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "http://worldclockapi.com/api/json/utc/now",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		}
	]
}